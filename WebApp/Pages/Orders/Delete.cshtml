@page "/Orders/Delete"
@using WebApp.Interfaces
@model WebApp.Pages.Orders.DeleteModel
@inject IOrder OrderRepository

<h4>Order</h4>
<hr />
<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Order.CarId)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Order.CarId)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Order.UserId)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Order.UserId)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Order.StartDate)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Order.StartDate)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Order.EndDate)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Order.EndDate)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Order.TotalPrice)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Order.TotalPrice)
    </dd>
</dl>

<p>Are you sure you want to delete this order?</p>
<form method="post">
    <input type="hidden" asp-for="Order.OrderId" />
    <input type="submit" value="Delete" class="btn btn-danger" /> |
    <a asp-page="./Index">Back to List</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}